//
//  UserViewModel.swift
//  NatureID
//
//  Created by MacNCheese on 13/09/2023.
//

import Foundation
import SwiftUI
import FirebaseAuth
import FirebaseFirestore
import FirebaseFirestoreSwift

class SessionManager : ObservableObject{
    @Published var userVm : UserViewModel?
    @Published var isLoggedIn : Bool?
    
    let db = Firestore.firestore()
    let auth = Auth.auth()
    init() {
        self.auth.addStateDidChangeListener { auth, user in
            print("test")
            if let user = user {
                self.userVm = UserViewModel(id: user.uid)
                withAnimation {
                    self.isLoggedIn = true
                }
            }else {
                self.userVm = nil
                withAnimation {
                    self.isLoggedIn = false
                }
            }
        }
    }
    
    
    
    func register(email : String, userName : String, password : String, image : UIImage, completion: @escaping (String?) -> Void) {
        
        if(userName.isEmpty) {
            completion("Please enter a username")
            return
        }
        
        // MARK: create new user
        auth.createUser(withEmail: email, password: password){ authResult, error in
            if error != nil{
                completion(error!.localizedDescription)
                return
            }
            if let authResult = authResult {
                var newUser = User()
                let currentUser = authResult.user
                
                newUser.id = currentUser.uid
                newUser.email = currentUser.email
                newUser.userName = userName
                // Upload image
                ImageManager.upload(image: image, name: currentUser.uid) { url in
                    if let url = url{
                        newUser.photoUrl = url.absoluteString
                        self.createUser(user: newUser)
                    }else { completion("Upload image failed"); return }
                }
            }else { completion("Register failed"); return }
             
            completion(nil)
        }
    }
    
    func login(email : String, password : String, completion: @escaping (String?) -> Void) {
        
        auth.signIn(withEmail: email, password: password) { authResult, error in
            if(error != nil){
                completion(error!.localizedDescription)
                return
            }
            if authResult != nil {
                completion(nil)
                return
            }
            completion("Error logging in")
        }
    }
    
    func logout() {
        do {
            try auth.signOut()
        } catch {
            print(error)
        }
    }
    
    func createUser(user : User){
        // ID generated by Firebase Auth
        do {
            try db.collection("user").document(user.id!).setData(from: user, completion: { error in
                if let error = error{
                    print(error.localizedDescription)
                }
            })
        } catch {
            print(error.localizedDescription)
        }
    }
}
